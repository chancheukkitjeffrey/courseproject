
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include "Employee.h"

using namespace std;

int choice; // The option selected in main menu
bool same; // Bool to determine if a randomized ID is taken. True ==> yes is same, False ==> no not same
long tempID; // Store an ID generated by the rand function. The ID will only assigned as newEmp ID once checked against all employee IDs in the employees vector

vector <employee> employees; // Vector that contains all objects of the employee class.

template <typename T> 
void input (T &x) {
  cin >> x;
  cin.ignore();
}


int main () {
  cout << endl << "---Staff Management System---" << endl <<
          "1: insert information of a new employee" << endl << 
          "2: Search for an employee and view information (via employee ID)" << endl <<
          "3: Edit employee details (via employee ID)" << endl <<
          "4: Delete an employee from the system (via employee ID)" << endl <<
          "5: Search for all employees with a wage higher than 20k" << endl << endl;
          
  cout << "Please select an option by typing in its number and pressing enter:" << endl;
  input(choice);
  
  cout << endl;
  
  if (choice < 1 || choice > 5) {
    cout << "Error: Input option do not exsit. Restarting..." << endl << endl; // Restart the system if the input option do not exsit.
    main ();
  }
  
  else if (choice == 1) {
    cout << "Your selected option is 1. How many new employees are you entering? Please type in the total and press enter." << endl; 
    
    int newEmpTotal;
    input (newEmpTotal);
    while (newEmpTotal <= 0) {
      cout << "Numer of new employees was invalid. Please enter a number greater than 0:" << endl;
      input (newEmpTotal);
    }
    
    vector <employee> newEmp(newEmpTotal);
    
    for (unsigned int i = 0; i < newEmpTotal; i++) {
     
      cout << endl << "New employee " << (i+1) << ")" << endl;
     
			string name;
      cout << "Please enter the employee name:" << endl; 
      getline (cin, name);
      newEmp[i].setName(name);

      cout << "Please enter the employee age:" << endl;
      int age;
      input (age);
      newEmp[i].setAge(age);
      
    	//Address: 
    		cout << "Employee address information:" << endl;

    		cout << "   Please enter the employee's street address (ex: 44 Shirley Avenue):" << endl;
    		string street;
      	getline (cin, street);
      	newEmp[i].addr.setStreet(street);
      	
    		cout << "   Please enter the employee's city (ex: West Chicago):" << endl;
    		string city;
      	getline (cin, city);
      	newEmp[i].addr.setCity(city);  	

    		cout << "   Please enter the employee's state, shortened (ex: IL):" << endl;
    		string state;
    		getline (cin, state);
      	newEmp[i].addr.setState(state);      	

    		cout << "   Please enter the employee's zip code (ex: 60185):" << endl;
    		string zip;
      	getline (cin, zip);
      	newEmp[i].addr.setZip(zip);  

      cout << "Please enter the employee role:" << endl;
  		string role;
    	getline (cin, role);
    	newEmp[i].setRole(role);
      
      cout << "Please enter the employee sallary in full, no commas (eg. 25000):" << endl;
      int sallary;
      input (sallary);
      newEmp[i].setSallary(sallary);
      
      srand (time(0));
      same = true;
     
      while (same == true) {
       tempID = ((rand () %9000) +1000); // Generate a random ID number 1000 to 9999
       same = false;
        
        for (unsigned int j = 0; j < employees.size() && same == false; j++) {
          
          if (j!=i && tempID == employees[j].getID()) {
            same = true;
          }
          
        }
        
      }
      
      newEmp[i].setID (tempID);
      cout << "Employee ID has been set as " << newEmp[i].getID () << endl;
      
      employees.push_back(newEmp[i]);
    }
  } // end of choice 1 function
  
  else if (choice == 2) { // the search choice
    
    long searchID;
    cout << "Please input the 4 digit employee ID, no spaces:" << endl;
    input (searchID);
    bool match = false;
    
    for (unsigned int h = 0; h < employees.size() && match == false; h++) {
      
      if (employees[h].getID() == searchID) {
        cout << endl << "Match found:" << endl << endl <<
        "Name: " << employees[h].getName() << endl <<
        "Age: " << employees[h].getAge() << endl <<
        "Address:" << endl << 
        "  Street: " << employees[h].addr.getStreet() << endl <<
        "  City: " << employees[h].addr.getCity() << endl <<
        "  State " << employees[h].addr.getState() << endl <<
        "  Zip: " << employees[h].addr.getZip() << endl <<
        "Role: " << employees[h].getRole() << endl <<
        "Sallary: " << employees[h].getSallary() << endl <<
        "ID: " << employees[h].getID() << endl << endl;
        match = true;
      
				cout << "Would you like to edit any of the above employee information? Type in Y/N and press enter" << endl;
				char YN;
				input (YN);
				if (YN == 'Y') {
					cout << endl << "Please enter the information field you want to edit. Multiple fields can be entered if seperated by commas. Entering ""address"" will prompt to edit every part of the address." << endl;
					string editChoice;
					getline (cin, editChoice);
					cout << editChoice;
					
				}
      	
      }
      
    }
   
    if (match == false) {
      cout << "No employee in database with ID " << searchID << endl;
    }
    
  }
  main();
}
