#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include "Employee.h"

using namespace std;

int choice; // The option selected in main menu
bool same; // Bool to determine if a randomized ID is taken. True ==> yes is same, False ==> no not same
long tempID; // Store an ID generated by the rand function. The ID will only assigned as newEmp ID once checked against all employee IDs in the employees vector
int SearchChoice; // The option selected while search for employee
int EditChoice; // The option selected after search for the employee
vector <employee> employees; // Vector that contains all objects of the employee class.
void EditOrDelete(int h){ //functions to show information of the employee and decide whether delete the information
      cout << endl << "Match found:" << endl << endl <<
      "Name: " << employees[h].getName() << endl <<
      "Age: " << employees[h].getAge() << endl <<
      "Role: " << employees[h].getRole() << endl <<
      "Sallary: " << employees[h].getSallary() << endl <<
      "ID: " << employees[h].getID() << endl << endl;

      cout << endl <<
      "1: delete information of the employee" << endl <<
      "2: edit information of the employee" << endl << endl;
      cout << "Please select an option by typing in its number and pressing enter:" << endl;
      cin >> EditChoice;
      cin.ignore();
      cout << endl;

      if (EditChoice == 2){
        cout << endl << "Please enter the information field you want to edit. Multiple fields can be entered if seperated by commas. Entering ""address"" will prompt to edit every part of the address." << endl;
        string editChoice;
        getline (cin, editChoice);
        cout << editChoice;
      }
      if (EditChoice == 3){
        employees.erase (h);
      }
}


int main() {
  do {
    cout << endl << "---Staff Management System---" << endl <<
            "1: insert information of a new employee" << endl <<
            "2: Search for an employee and view information (via employee ID)" << endl <<
            "3: Edit employee details (via employee ID)" << endl <<
            "4: Delete an employee from the system (via employee ID)" << endl <<
            "5: Search for all employees with a wage higher than 20k" << endl <<
            "6: Exit the system" << endl << endl;

    cout << "Please select an option by typing in its number and pressing enter:" << endl;
    cin >> choice;
    cin.ignore();

    cout << endl;

    if (choice < 1 || choice > 6) {
      cout << "Error: Input option do not exsit. Restarting..." << endl << endl; // Restart the system if the input option do not exsit.
    }

    else if (choice == 1) {
      cout << "Your selected option is 1. How many new employees are you entering? Please type in the total and press enter." << endl;

      int newEmpTotal;
      cin >> newEmpTotal;
      cin.ignore();
      while (newEmpTotal <= 0) {
        cout << "Numer of new employees was invalid. Please enter a number greater than 0:" << endl;
        cin >> newEmpTotal;
        cin.ignore();
      }

      for (unsigned int i = 0; i < newEmpTotal; i++) {
        cout << endl << "New employee " << (i+1) << ")" << endl;

        employee newEmp;

        string name;
        cout << "Please enter the employee name:" << endl;
        getline (cin, name);
        newEmp.setName(name);

        cout << "Please enter the employee age:" << endl;
        int age;
        cin >> age;
        cin.ignore();
        newEmp.setAge(age);

        cout << "Please enter the employee role:" << endl;
        string role;
        getline (cin, role);
        newEmp.setRole(role);

        cout << "Please enter the employee salary in full, no commas (eg. 25000):" << endl;
        int salary;
        cin >> salary;
        cin.ignore();
        newEmp.setSalary(salary);

        int id = employees.size() + 1000;  // Assign ID in range 1000 - 9999
        newEmp.setID(id);
        cout << "Employee ID has been set as " << newEmp.getID () << endl;

        employees.push_back(newEmp);
      }
    } // end of choice 1 function
    //


    else if (choice == 2) { // the search choice
      cout << endl << "Search employee by:"
              "1: Employee ID " << endl <<
              "2: Name " << endl <<
              "3: Age" << endl <<
              "4: Role" << endl <<
              "5: Salary" << endl << endl;
      cout << "Please select an option by typing in its number and pressing enter:" << endl;
      cin >> SearchChoice;
      cin.ignore();

      if(SearchChoice == 1) {
        bool match = false;
        long searchID;
        cout << "Please input the 4 digit employee ID, no spaces:" << endl;
        cin >> (searchID);
        cin.ignore();
        for (unsigned int h = 0; h < employees.size(); h++) {
          if (employees[h].getID() == searchID) {
            match = true;
            EditOrDelete(h);
          }
        }
        if (match == false) {
          cout << "No employee in database with this ID " << searchID << endl;
        }
      }
      if(SearchChoice == 2){
        bool match = false;
        string searchName;
        cout << "Please input the name of the employee, no spaces:" <<endl;
        cin >> (searchName);
        cin.ignore();
        for (unsigned int h = 0; h < employees.size(); h++) {
          if (employees[h].getName() == searchName) {
            match = true;
            EditOrDelete(h);
          }
        }
        if (match == false) {
            cout << "No employee in database with this name " << searchName << endl;
        }
      }
      if(SearchChoice == 3){
        bool match = false;
        int searchAge;
        cout << "Please input the age of the employee, no spaces:" <<endl;
        cin >> (searchAge);
        cin.ignore();
        for (unsigned int h = 0; h < employees.size(); h++) {
          if (employees[h].getAge() == searchAge) {
            match = ture
            EditOrDelete(h);
          }
        }
        if (match == false) {
            cout << "No employee in database in this age " << searchAge << endl;
        }
      }
      if(SearchChoice == 4){
        bool match = false;
        string searchRole;
        cout << "Please input the role of the employee, no spaces:" <<endl;
        cin >> (searchRole);
        cin.ignore();
        for (unsigned int h = 0; h < employees.size(); h++) {
          if (employees[h].getRole() == searchRole) {
            match = true;
            EditOrDelete(h);
          }
        }
        if (match == false) {
          cout << "No employee in database in this role " << searchRole << endl;
        }
      }
      if(SearchChoice == 5){
        bool match = false;
        int searchSalary;
        cout << "Please input the salary of the employee, no spaces:" <<endl;
        cin >> (searchSalary);
        cin.ignore();
        for (unsigned int h = 0; h < employees.size(); h++) {
          if (employees[h].getSalary() == searchSalary) {
            match = true;
            EditOrDelete(h);
          }
        }
        if (match == false) {
          cout << "No employee in database with this salary" << searchSalary << endl;
        }
      }


    }
  } while(choice != 6);
}
